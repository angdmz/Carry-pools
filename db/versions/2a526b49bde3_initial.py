"""empty message

Revision ID: 2a526b49bde3
Revises: 
Create Date: 2023-04-06 22:13:23.762499

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '2a526b49bde3'
down_revision = None
branch_labels = None
depends_on = None

enum_identification_type = sa.Enum('DNI', 'CUIT', 'LE', name='enum_identification_type')
enum_academic_type = sa.Enum('SCHOOL', 'HIGHSCHOOL', 'UNIVERSITY', name='enum_academic_type')

def upgrade() -> None:
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public')

    op.create_table('academics',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('full_name', sa.String(), nullable=False),
                    sa.Column('type', enum_academic_type,
                              nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('companies',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('full_name', sa.String(), nullable=False),
                    sa.Column('cuit', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('government_organisms',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('full_name', sa.String(), nullable=False),
                    sa.Column('sector', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('natural_persons',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=False),
                    sa.Column('last_name', sa.String(), nullable=False),
                    sa.Column('person_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['person_id'], ['natural_persons.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('participants',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column('date_of_verification', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('identifications',
                    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
                    sa.Column('type', enum_identification_type, nullable=True),
                    sa.Column('value', sa.String(), nullable=False),
                    sa.Column('a_id', sa.UUID(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['a_id'], ['natural_persons.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('identifications')
    op.drop_table('participants')
    op.drop_table('natural_persons')
    op.drop_table('government_organisms')
    op.drop_table('companies')
    op.drop_table('academics')
    op.execute(f"DROP TYPE {enum_identification_type.name}")
    op.execute(f"DROP TYPE {enum_academic_type.name}")
    # ### end Alembic commands ###
